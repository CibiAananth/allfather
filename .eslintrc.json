{
  "root": true,
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "next/core-web-vitals",
    "react-app",
    "react-app/jest",
    "plugin:css/recommended",
    "plugin:prettier/recommended",
    "stylelint"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.eslint.json"
  },
  "plugins": ["@typescript-eslint", "import", "css", "prettier", "json-format"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {
        "alwaysTryTypes": true
      },
      "alias": {
        "map": [["@", "./"]],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    },
    "json/sort-package-json": "standard",
    "json/ignore-files": ["**/package-lock.json"],
    "json/json-with-comments-files": ["**/tsconfig.json", ".vscode/**"]
  },
  "rules": {
    "node/no-missing-import": "off", // to disable path alias errors

    "prettier/prettier": "error",

    "import/no-unresolved": "error",
    "import/no-duplicates": "error",
    "import/no-extraneous-dependencies": "warn",
    "import/no-mutable-exports": "error",
    "import/no-self-import": "error",
    "import/no-useless-path-segments": "error",

    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/promise-function-async": "error",

    // Note: you must disable the base rule as it can report incorrect errors
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "error",

    // Note: you must disable the base rule as it can report incorrect errors
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": "error",

    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",

    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",

    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": "error"
  }
}
