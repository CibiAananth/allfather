{
  "extends": [
    "next/core-web-vitals",
    "react-app",
    "react-app/jest",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "parserOptions": {
    "project": "./tsconfig.json" // path to your TypeScript configuration file
  },
  "rules": {
    "prettier/prettier": "error",

    "import/no-duplicates": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-mutable-exports": "error",
    "import/no-self-import": "error",
    "import/no-useless-path-segments": "error",

    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/promise-function-async": "error",

    // Note: you must disable the base rule as it can report incorrect errors
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "error",

    // Note: you must disable the base rule as it can report incorrect errors
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": "error",

    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",

    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",

    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": "error",

    "camelcase": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase", "PascalCase"]
      },

      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow"
      },

      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },

      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ]
  }
}
